/**
 * Messente API
 * [Messente](https://messente.com) is a global provider of messaging and user verification services.  * Send and receive SMS, Viber, WhatsApp and Telegram messages. * Manage contacts and groups. * Fetch detailed info about phone numbers. * Blacklist phone numbers to make sure you're not sending any unwanted messages.  Messente builds [tools](https://messente.com/documentation) to help organizations connect their services to people anywhere in the world.
 *
 * OpenAPI spec version: 1.1.1
 * Contact: messente@messente.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.3.4
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ErrorNumberLookup', 'model/SyncNumberLookup', 'model/SyncNumberLookupSuccess'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/ErrorNumberLookup'), require('../model/SyncNumberLookup'), require('../model/SyncNumberLookupSuccess'));
  } else {
    // Browser globals (root is window)
    if (!root.MessenteApi) {
      root.MessenteApi = {};
    }
    root.MessenteApi.NumberLookupApi = factory(root.MessenteApi.ApiClient, root.MessenteApi.ErrorNumberLookup, root.MessenteApi.SyncNumberLookup, root.MessenteApi.SyncNumberLookupSuccess);
  }
}(this, function(ApiClient, ErrorNumberLookup, SyncNumberLookup, SyncNumberLookupSuccess) {
  'use strict';

  /**
   * NumberLookup service.
   * @module api/NumberLookupApi
   * @version 1.1.0
   */

  /**
   * Constructs a new NumberLookupApi. 
   * @alias module:api/NumberLookupApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the syncNumberLookup operation.
     * @callback module:api/NumberLookupApi~syncNumberLookupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SyncNumberLookupSuccess} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Requests info about phone numbers
     * @param {module:model/SyncNumberLookup} syncNumberLookup Numbers for lookup
     * @param {module:api/NumberLookupApi~syncNumberLookupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SyncNumberLookupSuccess}
     */
    this.syncNumberLookup = function(syncNumberLookup, callback) {
      var postBody = syncNumberLookup;

      // verify the required parameter 'syncNumberLookup' is set
      if (syncNumberLookup === undefined || syncNumberLookup === null) {
        throw new Error("Missing the required parameter 'syncNumberLookup' when calling syncNumberLookup");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['basicAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = SyncNumberLookupSuccess;

      return this.apiClient.callApi(
        '/hlr/sync', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
