/**
 * Messente API
 * [Messente](https://messente.com) is a global provider of messaging and user verification services.  * Send and receive SMS, Viber, WhatsApp and Telegram messages. * Manage contacts and groups. * Fetch detailed info about phone numbers. * Blacklist phone numbers to make sure you're not sending any unwanted messages.  Messente builds [tools](https://messente.com/documentation) to help organizations connect their services to people anywhere in the world.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: messente@messente.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorNumberLookup from '../model/ErrorNumberLookup';
import NumbersToInvestigate from '../model/NumbersToInvestigate';
import SyncNumberLookupSuccess from '../model/SyncNumberLookupSuccess';

/**
* NumberLookup service.
* @module api/NumberLookupApi
* @version 2.0.0
*/
export default class NumberLookupApi {

    /**
    * Constructs a new NumberLookupApi. 
    * @alias module:api/NumberLookupApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the fetchInfo operation.
     * @callback module:api/NumberLookupApi~fetchInfoCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SyncNumberLookupSuccess} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Requests info about phone numbers
     * @param {module:model/NumbersToInvestigate} numbersToInvestigate Numbers for lookup
     * @param {module:api/NumberLookupApi~fetchInfoCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SyncNumberLookupSuccess}
     */
    fetchInfo(numbersToInvestigate, callback) {
      let postBody = numbersToInvestigate;
      // verify the required parameter 'numbersToInvestigate' is set
      if (numbersToInvestigate === undefined || numbersToInvestigate === null) {
        throw new Error("Missing the required parameter 'numbersToInvestigate' when calling fetchInfo");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SyncNumberLookupSuccess;
      return this.apiClient.callApi(
        '/hlr/sync', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
