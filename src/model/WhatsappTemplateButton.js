/**
 * Messente API
 * [Messente](https://messente.com) is a global provider of messaging and user verification services.  * Send and receive SMS, Viber, WhatsApp and Telegram messages. * Manage contacts and groups. * Fetch detailed info about phone numbers. * Blacklist phone numbers to make sure you're not sending any unwanted messages.  Messente builds [tools](https://messente.com/documentation) to help organizations connect their services to people anywhere in the world.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: messente@messente.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.3.4
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/WhatsappButtonType', 'model/WhatsappOtpButtonType', 'model/WhatsappSupportedApp'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./WhatsappButtonType'), require('./WhatsappOtpButtonType'), require('./WhatsappSupportedApp'));
  } else {
    // Browser globals (root is window)
    if (!root.MessenteApi) {
      root.MessenteApi = {};
    }
    root.MessenteApi.WhatsappTemplateButton = factory(root.MessenteApi.ApiClient, root.MessenteApi.WhatsappButtonType, root.MessenteApi.WhatsappOtpButtonType, root.MessenteApi.WhatsappSupportedApp);
  }
}(this, function(ApiClient, WhatsappButtonType, WhatsappOtpButtonType, WhatsappSupportedApp) {
  'use strict';



  /**
   * The WhatsappTemplateButton model module.
   * @module model/WhatsappTemplateButton
   * @version 2.3.0
   */

  /**
   * Constructs a new <code>WhatsappTemplateButton</code>.
   * Whatsapp button object.
   * @alias module:model/WhatsappTemplateButton
   * @class
   */
  var exports = function() {
    var _this = this;

  };

  /**
   * Constructs a <code>WhatsappTemplateButton</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/WhatsappTemplateButton} obj Optional instance to populate.
   * @return {module:model/WhatsappTemplateButton} The populated <code>WhatsappTemplateButton</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('type')) {
        obj['type'] = WhatsappButtonType.constructFromObject(data['type']);
      }
      if (data.hasOwnProperty('otp_type')) {
        obj['otp_type'] = WhatsappOtpButtonType.constructFromObject(data['otp_type']);
      }
      if (data.hasOwnProperty('autofill_text')) {
        obj['autofill_text'] = ApiClient.convertToType(data['autofill_text'], 'String');
      }
      if (data.hasOwnProperty('supported_apps')) {
        obj['supported_apps'] = ApiClient.convertToType(data['supported_apps'], [WhatsappSupportedApp]);
      }
      if (data.hasOwnProperty('text')) {
        obj['text'] = ApiClient.convertToType(data['text'], 'String');
      }
      if (data.hasOwnProperty('phone_number')) {
        obj['phone_number'] = ApiClient.convertToType(data['phone_number'], 'String');
      }
      if (data.hasOwnProperty('url')) {
        obj['url'] = ApiClient.convertToType(data['url'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {module:model/WhatsappButtonType} type
   */
  exports.prototype['type'] = undefined;
  /**
   * @member {module:model/WhatsappOtpButtonType} otp_type
   */
  exports.prototype['otp_type'] = undefined;
  /**
   * Text to be autofilled in the OTP field
   * @member {String} autofill_text
   */
  exports.prototype['autofill_text'] = undefined;
  /**
   * List of supported apps for the button
   * @member {Array.<module:model/WhatsappSupportedApp>} supported_apps
   */
  exports.prototype['supported_apps'] = undefined;
  /**
   * Text content of the button
   * @member {String} text
   */
  exports.prototype['text'] = undefined;
  /**
   * Phone number for the button
   * @member {String} phone_number
   */
  exports.prototype['phone_number'] = undefined;
  /**
   * URL for the button
   * @member {String} url
   */
  exports.prototype['url'] = undefined;



  return exports;
}));


