/**
 * Messente API
 * [Messente](https://messente.com) is a global provider of messaging and user verification services.  * Send and receive SMS, Viber, WhatsApp and Telegram messages. * Manage contacts and groups. * Fetch detailed info about phone numbers. * Blacklist phone numbers to make sure you're not sending any unwanted messages.  Messente builds [tools](https://messente.com/documentation) to help organizations connect their services to people anywhere in the world.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: messente@messente.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FetchBlacklistSuccess model module.
 * @module model/FetchBlacklistSuccess
 * @version 2.0.0
 */
class FetchBlacklistSuccess {
    /**
     * Constructs a new <code>FetchBlacklistSuccess</code>.
     * A container for blacklisted numbers
     * @alias module:model/FetchBlacklistSuccess
     */
    constructor() { 
        
        FetchBlacklistSuccess.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FetchBlacklistSuccess</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FetchBlacklistSuccess} obj Optional instance to populate.
     * @return {module:model/FetchBlacklistSuccess} The populated <code>FetchBlacklistSuccess</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FetchBlacklistSuccess();

            if (data.hasOwnProperty('phoneNumbers')) {
                obj['phoneNumbers'] = ApiClient.convertToType(data['phoneNumbers'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FetchBlacklistSuccess</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FetchBlacklistSuccess</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['phoneNumbers'])) {
            throw new Error("Expected the field `phoneNumbers` to be an array in the JSON data but got " + data['phoneNumbers']);
        }

        return true;
    }


}



/**
 * Array of unique phone numbers
 * @member {Array.<String>} phoneNumbers
 */
FetchBlacklistSuccess.prototype['phoneNumbers'] = undefined;






export default FetchBlacklistSuccess;

