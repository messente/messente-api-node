/**
 * Messente API
 * [Messente](https://messente.com) is a global provider of messaging and user verification services.  * Send and receive SMS, Viber, WhatsApp and Telegram messages. * Manage contacts and groups. * Fetch detailed info about phone numbers. * Blacklist phone numbers to make sure you're not sending any unwanted messages.  Messente builds [tools](https://messente.com/documentation) to help organizations connect their services to people anywhere in the world.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: messente@messente.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NumberToBlacklist model module.
 * @module model/NumberToBlacklist
 * @version 2.0.0
 */
class NumberToBlacklist {
    /**
     * Constructs a new <code>NumberToBlacklist</code>.
     * A container for a soon-to-be blacklisted number
     * @alias module:model/NumberToBlacklist
     * @param phoneNumber {String} Phone number in e.164 format
     */
    constructor(phoneNumber) { 
        
        NumberToBlacklist.initialize(this, phoneNumber);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, phoneNumber) { 
        obj['phoneNumber'] = phoneNumber;
    }

    /**
     * Constructs a <code>NumberToBlacklist</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NumberToBlacklist} obj Optional instance to populate.
     * @return {module:model/NumberToBlacklist} The populated <code>NumberToBlacklist</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NumberToBlacklist();

            if (data.hasOwnProperty('phoneNumber')) {
                obj['phoneNumber'] = ApiClient.convertToType(data['phoneNumber'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NumberToBlacklist</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NumberToBlacklist</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of NumberToBlacklist.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['phoneNumber'] && !(typeof data['phoneNumber'] === 'string' || data['phoneNumber'] instanceof String)) {
            throw new Error("Expected the field `phoneNumber` to be a primitive type in the JSON string but got " + data['phoneNumber']);
        }

        return true;
    }


}

NumberToBlacklist.RequiredProperties = ["phoneNumber"];

/**
 * Phone number in e.164 format
 * @member {String} phoneNumber
 */
NumberToBlacklist.prototype['phoneNumber'] = undefined;






export default NumberToBlacklist;

