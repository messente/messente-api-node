/**
 * Messente API
 * [Messente](https://messente.com) is a global provider of messaging and user verification services.  * Send and receive SMS, Viber, WhatsApp and Telegram messages. * Manage contacts and groups. * Fetch detailed info about phone numbers. * Blacklist phone numbers to make sure you're not sending any unwanted messages.  Messente builds [tools](https://messente.com/documentation) to help organizations connect their services to people anywhere in the world.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: messente@messente.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The StatisticsReportSettings model module.
 * @module model/StatisticsReportSettings
 * @version 2.2.0
 */
class StatisticsReportSettings {
    /**
     * Constructs a new <code>StatisticsReportSettings</code>.
     * A container for statistics report settings
     * @alias module:model/StatisticsReportSettings
     * @param start_date {Date} Start date for the report
     * @param end_date {Date} End date for the report
     */
    constructor(start_date, end_date) { 
        
        StatisticsReportSettings.initialize(this, start_date, end_date);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, start_date, end_date) { 
        obj['start_date'] = start_date;
        obj['end_date'] = end_date;
    }

    /**
     * Constructs a <code>StatisticsReportSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StatisticsReportSettings} obj Optional instance to populate.
     * @return {module:model/StatisticsReportSettings} The populated <code>StatisticsReportSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StatisticsReportSettings();

            if (data.hasOwnProperty('start_date')) {
                obj['start_date'] = ApiClient.convertToType(data['start_date'], 'Date');
            }
            if (data.hasOwnProperty('end_date')) {
                obj['end_date'] = ApiClient.convertToType(data['end_date'], 'Date');
            }
            if (data.hasOwnProperty('message_types')) {
                obj['message_types'] = ApiClient.convertToType(data['message_types'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StatisticsReportSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StatisticsReportSettings</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of StatisticsReportSettings.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['message_types'])) {
            throw new Error("Expected the field `message_types` to be an array in the JSON data but got " + data['message_types']);
        }

        return true;
    }


}

StatisticsReportSettings.RequiredProperties = ["start_date", "end_date"];

/**
 * Start date for the report
 * @member {Date} start_date
 */
StatisticsReportSettings.prototype['start_date'] = undefined;

/**
 * End date for the report
 * @member {Date} end_date
 */
StatisticsReportSettings.prototype['end_date'] = undefined;

/**
 * Optional list of message types (sms, viber, whatsapp, hlr, telegram)
 * @member {Array.<String>} message_types
 */
StatisticsReportSettings.prototype['message_types'] = undefined;






export default StatisticsReportSettings;

