/**
 * Messente API
 * [Messente](https://messente.com) is a global provider of messaging and user verification services.  * Send and receive SMS, Viber, WhatsApp and Telegram messages. * Manage contacts and groups. * Fetch detailed info about phone numbers. * Blacklist phone numbers to make sure you're not sending any unwanted messages.  Messente builds [tools](https://messente.com/documentation) to help organizations connect their services to people anywhere in the world.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: messente@messente.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import StatisticsReport from './StatisticsReport';

/**
 * The StatisticsReportSuccess model module.
 * @module model/StatisticsReportSuccess
 * @version 2.2.0
 */
class StatisticsReportSuccess {
    /**
     * Constructs a new <code>StatisticsReportSuccess</code>.
     * A container for statistics reports
     * @alias module:model/StatisticsReportSuccess
     * @param reports {Array.<module:model/StatisticsReport>} Array of report objects
     */
    constructor(reports) { 
        
        StatisticsReportSuccess.initialize(this, reports);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, reports) { 
        obj['reports'] = reports;
    }

    /**
     * Constructs a <code>StatisticsReportSuccess</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StatisticsReportSuccess} obj Optional instance to populate.
     * @return {module:model/StatisticsReportSuccess} The populated <code>StatisticsReportSuccess</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StatisticsReportSuccess();

            if (data.hasOwnProperty('reports')) {
                obj['reports'] = ApiClient.convertToType(data['reports'], [StatisticsReport]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StatisticsReportSuccess</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StatisticsReportSuccess</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of StatisticsReportSuccess.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['reports']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['reports'])) {
                throw new Error("Expected the field `reports` to be an array in the JSON data but got " + data['reports']);
            }
            // validate the optional field `reports` (array)
            for (const item of data['reports']) {
                StatisticsReport.validateJSON(item);
            };
        }

        return true;
    }


}

StatisticsReportSuccess.RequiredProperties = ["reports"];

/**
 * Array of report objects
 * @member {Array.<module:model/StatisticsReport>} reports
 */
StatisticsReportSuccess.prototype['reports'] = undefined;






export default StatisticsReportSuccess;

