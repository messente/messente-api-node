/**
 * Messente API
 * [Messente](https://messente.com) is a global provider of messaging and user verification services.  * Send and receive SMS, Viber, WhatsApp and Telegram messages. * Manage contacts and groups. * Fetch detailed info about phone numbers. * Blacklist phone numbers to make sure you're not sending any unwanted messages.  Messente builds [tools](https://messente.com/documentation) to help organizations connect their services to people anywhere in the world.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: messente@messente.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Omnimessage from './Omnimessage';

/**
 * The BulkOmnimessage model module.
 * @module model/BulkOmnimessage
 * @version 2.2.0
 */
class BulkOmnimessage {
    /**
     * Constructs a new <code>BulkOmnimessage</code>.
     * A bulk omnimessage.
     * @alias module:model/BulkOmnimessage
     * @param messages {Array.<module:model/Omnimessage>} A list of omnimessages.
     */
    constructor(messages) { 
        
        BulkOmnimessage.initialize(this, messages);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, messages) { 
        obj['messages'] = messages;
    }

    /**
     * Constructs a <code>BulkOmnimessage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BulkOmnimessage} obj Optional instance to populate.
     * @return {module:model/BulkOmnimessage} The populated <code>BulkOmnimessage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BulkOmnimessage();

            if (data.hasOwnProperty('messages')) {
                obj['messages'] = ApiClient.convertToType(data['messages'], [Omnimessage]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BulkOmnimessage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BulkOmnimessage</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BulkOmnimessage.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['messages']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['messages'])) {
                throw new Error("Expected the field `messages` to be an array in the JSON data but got " + data['messages']);
            }
            // validate the optional field `messages` (array)
            for (const item of data['messages']) {
                Omnimessage.validateJSON(item);
            };
        }

        return true;
    }


}

BulkOmnimessage.RequiredProperties = ["messages"];

/**
 * A list of omnimessages.
 * @member {Array.<module:model/Omnimessage>} messages
 */
BulkOmnimessage.prototype['messages'] = undefined;






export default BulkOmnimessage;

