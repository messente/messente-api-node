/**
 * Messente API
 * [Messente](https://messente.com) is a global provider of messaging and user verification services.  * Send and receive SMS, Viber, WhatsApp and Telegram messages. * Manage contacts and groups. * Fetch detailed info about phone numbers. * Blacklist phone numbers to make sure you're not sending any unwanted messages.  Messente builds [tools](https://messente.com/documentation) to help organizations connect their services to people anywhere in the world.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: messente@messente.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import WhatsAppParameter from './WhatsAppParameter';

/**
 * The ViberVideo model module.
 * @module model/ViberVideo
 * @version 2.1.0
 */
class ViberVideo {
    /**
     * Constructs a new <code>ViberVideo</code>.
     * Viber video object
     * @alias module:model/ViberVideo
     * @param url {String} URL pointing to the video resource.
     * @param thumbnail {String} URL pointing to the video thumbnail resource.
     * @param file_size {Number} Size of the video file in bytes. Cannot be larger than 200MB.
     * @param duration {Array.<module:model/WhatsAppParameter>} Duration of the video in seconds. Cannot be longer than 600 seconds.
     */
    constructor(url, thumbnail, file_size, duration) { 
        
        ViberVideo.initialize(this, url, thumbnail, file_size, duration);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, url, thumbnail, file_size, duration) { 
        obj['url'] = url;
        obj['thumbnail'] = thumbnail;
        obj['file_size'] = file_size;
        obj['duration'] = duration;
    }

    /**
     * Constructs a <code>ViberVideo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ViberVideo} obj Optional instance to populate.
     * @return {module:model/ViberVideo} The populated <code>ViberVideo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ViberVideo();

            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('thumbnail')) {
                obj['thumbnail'] = ApiClient.convertToType(data['thumbnail'], 'String');
            }
            if (data.hasOwnProperty('file_size')) {
                obj['file_size'] = ApiClient.convertToType(data['file_size'], 'Number');
            }
            if (data.hasOwnProperty('duration')) {
                obj['duration'] = ApiClient.convertToType(data['duration'], [WhatsAppParameter]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ViberVideo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ViberVideo</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ViberVideo.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }
        // ensure the json data is a string
        if (data['thumbnail'] && !(typeof data['thumbnail'] === 'string' || data['thumbnail'] instanceof String)) {
            throw new Error("Expected the field `thumbnail` to be a primitive type in the JSON string but got " + data['thumbnail']);
        }
        if (data['duration']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['duration'])) {
                throw new Error("Expected the field `duration` to be an array in the JSON data but got " + data['duration']);
            }
            // validate the optional field `duration` (array)
            for (const item of data['duration']) {
                WhatsAppParameter.validateJSON(item);
            };
        }

        return true;
    }


}

ViberVideo.RequiredProperties = ["url", "thumbnail", "file_size", "duration"];

/**
 * URL pointing to the video resource.
 * @member {String} url
 */
ViberVideo.prototype['url'] = undefined;

/**
 * URL pointing to the video thumbnail resource.
 * @member {String} thumbnail
 */
ViberVideo.prototype['thumbnail'] = undefined;

/**
 * Size of the video file in bytes. Cannot be larger than 200MB.
 * @member {Number} file_size
 */
ViberVideo.prototype['file_size'] = undefined;

/**
 * Duration of the video in seconds. Cannot be longer than 600 seconds.
 * @member {Array.<module:model/WhatsAppParameter>} duration
 */
ViberVideo.prototype['duration'] = undefined;






export default ViberVideo;

