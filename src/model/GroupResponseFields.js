/**
 * Messente API
 * [Messente](https://messente.com) is a global provider of messaging and user verification services. Use Messente API library to send and receive SMS, Viber and WhatsApp messages, blacklist phone numbers to make sure you're not sending any unwanted messages, manage contacts and groups.  Messente builds [tools](https://messente.com/documentation) to help organizations connect their services to people anywhere in the world.
 *
 * OpenAPI spec version: 1.0.2
 * Contact: messente@messente.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GroupResponseFields model module.
 * @module model/GroupResponseFields
 * @version 1.0.3
 */
class GroupResponseFields {
    /**
     * Constructs a new <code>GroupResponseFields</code>.
     * A container for fields of a group
     * @alias module:model/GroupResponseFields
     * @param id {String} Id string in UUID format
     * @param name {String} The name of the group
     * @param contactsCount {Number} The count of contacts in the group
     */
    constructor(id, name, contactsCount) { 
        
        GroupResponseFields.initialize(this, id, name, contactsCount);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, name, contactsCount) { 
        obj['id'] = id;
        obj['name'] = name;
        obj['contactsCount'] = contactsCount;
    }

    /**
     * Constructs a <code>GroupResponseFields</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GroupResponseFields} obj Optional instance to populate.
     * @return {module:model/GroupResponseFields} The populated <code>GroupResponseFields</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GroupResponseFields();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('createdOn')) {
                obj['createdOn'] = ApiClient.convertToType(data['createdOn'], 'String');
            }
            if (data.hasOwnProperty('contactsCount')) {
                obj['contactsCount'] = ApiClient.convertToType(data['contactsCount'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Id string in UUID format
 * @member {String} id
 */
GroupResponseFields.prototype['id'] = undefined;

/**
 * The name of the group
 * @member {String} name
 */
GroupResponseFields.prototype['name'] = undefined;

/**
 * When the group was created
 * @member {String} createdOn
 */
GroupResponseFields.prototype['createdOn'] = undefined;

/**
 * The count of contacts in the group
 * @member {Number} contactsCount
 */
GroupResponseFields.prototype['contactsCount'] = undefined;






export default GroupResponseFields;

